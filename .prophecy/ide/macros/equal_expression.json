{
  "get_select" : {
    "name" : "get_select",
    "macroType" : "query",
    "definition" : "{{ adapter.dispatch('get_select', 'dbt_expectations')(model, expression, row_condition, group_by) }}",
    "parameters" : {
      "type" : "record",
      "fields" : [ {
        "name" : "model",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "expression",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "row_condition",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "group_by",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      } ]
    },
    "staleState" : "none"
  },
  "default__get_select" : {
    "name" : "default__get_select",
    "macroType" : "query",
    "definition" : "\n    select\n        {% if group_by %}\n        {% for g in group_by %}\n            {{ g }} as col_{{ loop.index }},\n        {% endfor %}\n        {% endif %}\n        {{ expression }} as expression\n    from\n        {{ model }}\n    {% if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by %}\n    group by\n        {% for g in group_by %}\n            {{ loop.index }}{% if not loop.last %},{% endif %}\n        {% endfor %}\n    {% endif %}",
    "parameters" : {
      "type" : "record",
      "fields" : [ {
        "name" : "model",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "expression",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "row_condition",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "group_by",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      } ]
    },
    "staleState" : "none"
  },
  "default__test_equal_expression" : {
    "name" : "default__test_equal_expression",
    "macroType" : "query",
    "definition" : "\n\n    {% set compare_model = model if not compare_model else compare_model %}\n    {% set compare_expression = expression if not compare_expression else compare_expression %}\n    {% set compare_row_condition = row_condition if not compare_row_condition else compare_row_condition %}\n    {% set compare_group_by = group_by if not compare_group_by else compare_group_by %}\n\n    {% set n_cols = (group_by|length) if group_by else 0 %}\n    with a as (\n        {{ dbt_expectations.get_select(model, expression, row_condition, group_by) }}\n    ),\n    b as (\n        {{ dbt_expectations.get_select(compare_model, compare_expression, compare_row_condition, compare_group_by) }}\n    ),\n    final as (\n\n        select\n            {% for i in range(1, n_cols + 1) %}\n            coalesce(a.col_{{ i }}, b.col_{{ i }}) as col_{{ i }},\n            {% endfor %}\n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        {% if n_cols > 0 %}\n            a\n            full outer join\n            b on\n            {% for i in range(1, n_cols + 1) %}\n                a.col_{{ i }} = b.col_{{ i }} {% if not loop.last and%}{% endif %}\n            {% endfor %}\n        {% else %}\n            a cross join b\n        {% endif %}\n    )\n    \n    \n    select\n        *\n    from final\n    where\n        {% if tolerance_percent %}\n        expression_difference_percent > {{ tolerance_percent }}\n        {% else %}\n        expression_difference > {{ tolerance }}\n        {% endif %}",
    "parameters" : {
      "type" : "record",
      "fields" : [ {
        "name" : "model",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "expression",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "compare_model",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "compare_expression",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "group_by",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "compare_group_by",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "row_condition",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "compare_row_condition",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "tolerance",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "tolerance_percent",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      } ]
    },
    "staleState" : "none"
  }
}
{
  "default__test_expect_select_column_values_to_be_unique_within_record" : {
    "name" : "default__test_expect_select_column_values_to_be_unique_within_record",
    "macroType" : "query",
    "definition" : "\n\n{% if not quote_columns %}\n    {% set columns=column_list %}\n{% elif quote_columns %}\n    {% set columns=[] %}\n        {% for column in column_list %}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {% endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set row_condition_ext %}\n\n    {% if row_condition  %}\n    {{ row_condition }} and\n    {% endif %}\n\n    {{ dbt_expectations.ignore_row_if_expression(ignore_row_if, columns) }}\n\n{% endset %}\n\nwith column_values as (\n\n    select\n        row_number() over(order by 1) as row_index,\n        {% for column in columns %}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {% endfor %}\n    from {{ model }}\n    where\n        1=1\n    {% if row_condition_ext %}\n        and {{ row_condition_ext }}\n    {% endif %}\n\n),\nunpivot_columns as (\n\n    {% for column in columns %}\n    select row_index, '{{ column }}' as column_name, {{ column }} as column_value from column_values\n    {% if not loop.last union%} all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n\n    select\n        row_index,\n        count(distinct column_value) as column_values\n    from unpivot_columns\n    group by 1\n    having count(distinct column_value) < {{ columns | length }}\n\n)\nselect * from validation_errors",
    "parameters" : {
      "type" : "record",
      "fields" : [ {
        "name" : "model",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "column_list",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "quote_columns",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "ignore_row_if",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      }, {
        "name" : "row_condition",
        "kind" : {
          "type" : "value"
        },
        "optional" : false,
        "isWorkflowNodeConfiguration" : false,
        "isReferenced" : false
      } ]
    },
    "staleState" : "none"
  }
}